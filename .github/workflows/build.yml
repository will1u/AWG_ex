# Based on https://github.com/jancumps/pico_gps_teseo/blob/main/.github/workflows/build.yml

name: Build on ubuntu against pico-sdk master
on:
  workflow_dispatch:
  push:
   branches:
     - 'develop'
     - 'main'
  pull_request:
    types: [opened, reopened]
    branches:
      - 'develop'
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
          mkdir -p "${{ github.workspace }}"

      - name: Checkout AWG_ex
        uses: actions/checkout@v4
        with:
          path: AWG_ex
          submodules: true

      - name: Checkout pico-sdk/master
        uses: actions/checkout@v4
        with:
          repository: raspberrypi/pico-sdk
          ref: master
          path: pico-sdk

      - name: Checkout pico-sdk submodules
        working-directory: ${{github.workspace}}/pico-sdk
        run: git submodule update --init

      - name: Install dependencies
        run: |
          sudo apt-get install ninja-build

          sudo apt-get install cmake

          # install gcc cross-compile for ARM v 14.2.1
          curl -Lo gcc-arm-none-eabi.tar.xz "https://developer.arm.com/-/media/Files/downloads/gnu/14.2.rel1/binrel/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-eabi.tar.xz"
          sudo mkdir /opt/gcc-arm-none-eabi
          sudo tar xf gcc-arm-none-eabi.tar.xz --strip-components=1 -C /opt/gcc-arm-none-eabi
          echo 'export PATH=$PATH:/opt/gcc-arm-none-eabi/bin' | sudo tee -a /etc/profile.d/gcc-arm-none-eabi.sh
          export PATH=$PATH:/opt/gcc-arm-none-eabi/bin
          export PICO_TOOLCHAIN_PATH=/opt/gcc-arm-none-eabi/bin
          source /etc/profile
          ls -lrta /opt/gcc-arm-none-eabi/bin
          arm-none-eabi-c++ --version
          
          # sudo apt install gcc-arm-none-eabi

      - name: Build Project
        working-directory: ${{github.workspace}}/AWG_ex
        shell: bash
        run: |
          echo ${{ github.ref }}
          mkdir build
          for board in pico pico_w pico2 pico2_w; do \
            mkdir -p build_$board && cd build_$board && \
            cmake .. -G "Ninja" -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_C_COMPILER:FILEPATH=/opt/gcc-arm-none-eabi/bin/arm-none-eabi-gcc -DCMAKE_CXX_COMPILER:FILEPATH=/opt/gcc-arm-none-eabi/bin/arm-none-eabi-g++ -DPICO_TOOLCHAIN_PATH=/opt/gcc-arm-none-eabi/bin -DPICO_SDK_PATH=../../pico-sdk -DCMAKE_BUILD_TYPE=Release -DPICO_BOARD=$board && \
            cmake --build . && mv AWG_1.uf2 ../build/AWG_1_$board.uf2 && \
            cd .. 
          done
          ls -dlrt $PWD/build/*.uf2
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AWG_ex
          path: /home/runner/work/awg_ex/awg_ex/AWG_ex/build/*.uf2